{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","React","memo","Title","Description","Poster","imdbID","Year","imdbRating","className","src","alt","href","propTypes","PropTypes","string","defaultProps","MoviesList","movies","map","movie","key","OMDB_URL","url","a","fetch","response","ok","Error","status","statusText","json","getMovie","title","request","defaultMovies","Plot","FindMovie","addMovie","useState","setTitle","isPreviewShown","switchPreviewDisplay","newMovie","setNewMovie","error","setError","isAddButtonDisabled","switchAddButtonDisability","isLoading","switchLoading","findMovie","movieFromServer","Response","htmlFor","type","id","placeholder","classNames","input","value","onChange","event","target","onKeyDown","preventDefault","button","onClick","some","disabled","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdb903da.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = React.memo(({\n  Title,\n  Description,\n  Poster,\n  imdbID,\n  Year,\n  imdbRating,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">\n            {Title}\n          </p>\n          <span>\n            {`(${Year}) Rating: ${imdbRating}`}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Description}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}/`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n));\n\nMovieCard.propTypes = {\n  Title: PropTypes.string,\n  Description: PropTypes.string,\n  Poster: PropTypes.string,\n  imdbID: PropTypes.string,\n  Year: PropTypes.string,\n  imdbRating: PropTypes.string,\n};\n\nMovieCard.defaultProps = {\n  Title: '',\n  Description: '',\n  Poster: '',\n  imdbID: '',\n  Year: '',\n  imdbRating: '',\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies,\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","/* eslint-disable max-len */\nconst OMDB_URL = 'https://www.omdbapi.com/?apikey=87aae092&t=';\n\nasync function request(url) {\n  const response = await fetch(`${OMDB_URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n}\n\nexport function getMovie(title) {\n  return request(title);\n}\n\nexport const defaultMovies = [\n  {\n    Title: 'Inception',\n    Plot: 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.',\n    Poster: 'https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg',\n    imdbID: 'tt1375666',\n    Year: '2010',\n    imdbRating: '8.8',\n  },\n  {\n    Title: 'Love Actually',\n    Plot: `Follows the lives of eight very different couples in dealing with their love lives in various loosely interrelated tales all set during a frantic month before Christmas in London, England.`,\n    Poster: 'https://m.media-amazon.com/images/M/MV5BMTY4NjQ5NDc0Nl5BMl5BanBnXkFtZTYwNjk5NDM3._V1_.jpg',\n    imdbID: 'tt0314331',\n    Year: '2003',\n    imdbRating: '7.6',\n  },\n  {\n    Title: 'The Day After Tomorrow',\n    Plot: 'Jack Hall, paleoclimatologist, must make a daring trek from Washington, D.C. to New York City to reach his son, trapped in the cross-hairs of a sudden international storm which plunges the planet into a new Ice Age.',\n    Poster: 'https://m.media-amazon.com/images/M/MV5BMTY4YWMzMTMtZjUyOS00OGY1LTljMGUtOWU5ZjYzMjc2ZTMwXkEyXkFqcGdeQXVyMTYzMDM0NTU@._V1_SY1000_CR0,0,701,1000_AL_.jpg',\n    imdbID: 'tt0319262',\n    Year: '2004',\n    imdbRating: '6.4',\n  },\n  {\n    Title: 'Rogue One',\n    Plot: 'The daughter of an Imperial scientist joins the Rebel Alliance in a risky move to steal the Death Star plans.',\n    Poster: 'https://m.media-amazon.com/images/M/MV5BMjEwMzMxODIzOV5BMl5BanBnXkFtZTgwNzg3OTAzMDI@._V1_SY1000_SX675_AL_.jpg',\n    imdbID: 'tt3748528',\n    Year: '2016',\n    imdbRating: '7.8',\n  },\n  {\n    Title: 'The Holiday',\n    Plot: \"Two women troubled with guy-problems swap homes in each other's countries, where they each meet a local guy and fall in love.\",\n    Poster: 'https://m.media-amazon.com/images/M/MV5BMTI1MDk4MzA2OF5BMl5BanBnXkFtZTYwMjQ3NDc3._V1_.jpg',\n    imdbID: 'tt0457939',\n    Year: '2006',\n    imdbRating: '6.9',\n  },\n];\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [isPreviewShown, switchPreviewDisplay] = useState(false);\n  const [newMovie, setNewMovie] = useState({});\n  const [error, setError] = useState('');\n  const [isAddButtonDisabled, switchAddButtonDisability] = useState(true);\n  const [isLoading, switchLoading] = useState(false);\n\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n    setError('');\n  };\n\n  const findMovie = async() => {\n    switchLoading(true);\n\n    try {\n      const movieFromServer = await getMovie(title);\n\n      if (movieFromServer.Response === 'False') {\n        setError(`Can't find this movie`);\n        switchLoading(false);\n\n        return;\n      }\n\n      setNewMovie(movieFromServer);\n      switchPreviewDisplay(true);\n      switchAddButtonDisability(false);\n      switchLoading(false);\n    } catch (serverError) {\n      setError(`Server doesn't response`);\n      switchLoading(false);\n    }\n  };\n\n  const handleAddition = () => {\n    setTitle('');\n\n    if (movies.some(movie => newMovie.imdbID === movie.imdbID)) {\n      setError('You have already added this movie');\n\n      return;\n    }\n\n    switchPreviewDisplay(false);\n    switchAddButtonDisability(true);\n\n    addMovie(newMovie);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control has-icons-left\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames({\n                input: true,\n                'is-danger': error,\n                'is-loading': isLoading,\n              })}\n              value={title}\n              onChange={handleChange}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  findMovie();\n                }\n              }}\n            />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-search\" />\n            </span>\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classNames({\n                button: true,\n                'is-light': true,\n                'is-loading': isLoading,\n              })}\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classNames({\n                button: true,\n                'is-success': !isAddButtonDisabled,\n                'is-warning': isAddButtonDisabled,\n              })}\n              onClick={handleAddition}\n              disabled={isAddButtonDisabled}\n              title={isAddButtonDisabled ? 'Find movie first' : ''}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {isPreviewShown ? (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...newMovie} />\n        </div>\n      ) : (\n        <h3>Start searching to see preview</h3>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      Title: PropTypes.string,\n      Plot: PropTypes.string,\n      Poster: PropTypes.string,\n      imdbID: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { defaultMovies } from './api/api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(defaultMovies);\n\n  const addMovie = (newMovie) => {\n    setMovies([\n      ...movies,\n      newMovie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}